0x0000000000001000 < MAIN >:
	0x1000:		lea    rsi,[rip+0x1ffa]        # 0x3001
	0x1007:		call   0x1068
	0x100c:		xor    rdi,rdi
	0x100f:		lea    rsi,[rip+0x203a]        # 0x3050
	0x1016:		mov    rdx,0x30
	0x101d:		xor    rax,rax
	0x1020:		syscall 
	0x1022:		lea    rbp,[rip+0x200f]        # 0x3038
	0x1029:		xor    rsi,rsi
	0x102c:		call   0x107e
	0x1031:		cmp    QWORD PTR [rip+0x1fff],0x0        # 0x3038
	0x1038:		je     0x1050
	0x103b:		lea    rsi,[rip+0x1fe7]        # 0x3029
	0x1042:		call   0x1068
	0x1047:		mov    rdi,0xffffffffffffffff
	0x104e:		jmp    0x105f
	0x1050:		lea    rsi,[rip+0x1fbe]        # 0x3015
	0x1057:		call   0x1068
	0x105c:		xor    rdi,rdi
	0x105f:		mov    rax,0x3c
	0x1066:		syscall 
	0x1068:		mov    rdi,0x1
	0x106f:		movzx  rdx,BYTE PTR [rsi-0x1]
	0x1074:		mov    rax,0x1
	0x107b:		syscall 
	0x107d:		ret    
	0x107e:		cmp    rsi,0x1
	0x1082:		jne    0x1085
	0x1084:		ret  

0x000000000000107e < FUNC.CHACKER >:
	0x107e:		cmp    rsi,0x1
	0x1082:		jne    0x1085
	0x1084:		ret    
	0x1085:		mov    rax,QWORD PTR [rbp+rsi*8+0x0]
	0x108a:		mov    rax,QWORD PTR [rbp+rax*8+0x0]
	0x108f:		mov    rbx,QWORD PTR [rbp+rsi*8+0x8]
	0x1094:		sub    QWORD PTR [rbp+rbx*8+0x0],rax
	0x1099:		ja     0x10b3
	0x109b:		cmp    QWORD PTR [rbp+rsi*8+0x10],0x2
	0x10a1:		je     0x10b2
	0x10a3:		cmp    QWORD PTR [rbp+rsi*8+0x10],0x0
	0x10a9:		je     0x10b3
	0x10ab:		mov    rsi,QWORD PTR [rbp+rsi*8+0x10]
	0x10b0:		jmp    0x107e
	0x10b2:		int3   
	0x10b3:		add    rsi,0x3
	0x10b7:		jmp    0x107e